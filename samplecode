/*
  @title: The Guide(Edison Hack Club)
  @author: kyle 
*/
const player = "p";
const box = "b";
const goal = "g";
const obstacle = "o";
/* */
setLegend(
  [ player, bitmap`
................
..........D.....
....DDDDDDDDD...
...DDDDDDDDDDDD.
...DDDDDDDDDDDD.
...DDDDDDDDDDDD.
...DDDDDDDDDDD..
....DD.DDDDDD...
....D..DDD......
.......DDD......
.......DDD......
.......DDD......
.......DDD......
................
................
................` ],
  [ box, bitmap`
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC
CCCCCCCCCCCCCCCC` ],
  [ goal, bitmap`
7777777777777777
7777777777777777
7777DDDDDDD77777
7DDD777777777777
DD77777777777777
D777777777777777
D777777777777777
D7777DD777777777
D7777DDDDD777777
D777777777DD7777
D7777777777DD777
DD7777777777D777
7D777777777DD777
7DD7777777DD7777
77DDD777DDD77777
77777DDD77777777` ],
  [ obstacle, bitmap`
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999
9999999999999999` ]
);

setSolids([player, box, obstacle]);

let level = 0;
const levels =  [
  map`
...o......
.pb...oooo
......o...
...o.oo...
..ooooo...
.........g`,
  map`
......o...
.p.bb.o...
......o...
..ooooo...
..o....g.g
..........`,
  map``,
  map``,
];
let currentLevel = levels[level];

setMap(currentLevel);

setSolids([ player, box, obstacle ]);

setPushables({
  [ player ]: [ box ], [ box ]: [ box ]
  
});


onInput("s", () => {
  let playerSprite = getFirst(player);  // Gets the sprite of the player
  playerSprite.y++;                     // Moves the player one tile down
});

onInput("w", () => {
  let playerSprite = getFirst(player);  // Gets the sprite of the player
  playerSprite.y--;                     // Moves the player one tile down
});

onInput("a", () => {
  let playerSprite = getFirst(player);  // Gets the sprite of the player
  playerSprite.x--;                     // Moves the player one tile down
});
onInput("d", () => {
  let playerSprite = getFirst(player);  // Gets the sprite of the player
  playerSprite.x++;                     // Moves the player one tile down
});

afterInput(() => {
  let boxSprite = getFirst(box);        // Gets the sprite of the box
  let goalSprite = getFirst(goal);      // Gets the sprite of the goal
    // Check if they overlap
  if (boxSprite.x == goalSprite.x && boxSprite.y == goalSprite.y) {
    // You win
    level++;                                // Increment the level we are on
  if (level >= levels.length) level = 0;  // Go back to the first level if user finishes all levels
    currentLevel = levels[level];
    setMap(currentLevel);
  }
});

onInput("j", () => {
  currentLevel = levels[level];
  setMap(currentLevel);
});



